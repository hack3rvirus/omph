{"kind":"FETCH","data":{"headers":{"accept-ranges":"bytes","age":"71412","cache-control":"max-age=2592000, public","connection":"keep-alive","content-encoding":"gzip","content-language":"en","content-length":"14289","content-type":"text/html; charset=UTF-8","date":"Thu, 25 Sep 2025 22:23:12 GMT","etag":"W/\"1758767580\"","expires":"Sun, 19 Nov 1978 05:00:00 GMT","last-modified":"Thu, 25 Sep 2025 02:33:00 GMT","link":"<https://bible.usccb.org/bible/readings/092525.cfm?amp> rel=\"amphtml\"","server":"nginx","strict-transport-security":"max-age=300","vary":"Accept-Encoding, Cookie, Cookie, Cookie","via":"1.1 varnish, 1.1 varnish, 1.1 varnish, 1.1 varnish","x-cache":"HIT, HIT, MISS, MISS","x-cache-hits":"47, 418, 0, 0","x-content-type-options":"nosniff","x-drupal-cache":"MISS","x-frame-options":"SAMEORIGIN","x-generator":"Drupal 10 (https://www.drupal.org)","x-pantheon-styx-hostname":"styx-fe1-a-5678c57974-nstrn","x-served-by":"cache-chi-kigq8000103-CHI, cache-par-lfpb1150051-PAR, cache-par-lfpg1960035-PAR, cache-par-lfpg1960035-PAR","x-styx-req-id":"f4783b68-99b7-11f0-a288-d6b4f430deaf","x-timer":"S1758838993.793942,VS0,VE11"},"body":"","status":200,"url":"https://bible.usccb.org/bible/readings/092525.cfm"},"revalidate":3600,"tags":[]}